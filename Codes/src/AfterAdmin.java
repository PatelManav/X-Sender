
import com.sun.glass.events.KeyEvent;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.Graphics;
import java.awt.event.InputEvent;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.io.BufferedInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.OutputStream;
import static java.lang.System.exit;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.concurrent.Delayed;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileSystemView;
import static sun.security.krb5.Confounder.bytes;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author MANAV PATEL
 */
public class AfterAdmin extends javax.swing.JFrame implements MouseListener{

    /**
     * Creates new form WalcomeJFrame
     */
    public AfterAdmin() {
        //static int i=0;
        initComponents();
        setLocation(200,50);
        setSize(895,540);
        //static int i=0;
        //jLabel2.setVisible(false);
        jLabel2.setLocation(160, 320);
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                Cursor cursor4 = new Cursor(Cursor.HAND_CURSOR);                
//                jButton1.setCursor(cursor4);
//                jButton1.setVisible(true);
//                
//            }
//        });
    }
    static int i=160;
    @Override
    public void paint(Graphics g)
    {
        // How to draw an arc above jLabel image......a 
        g.setColor(Color.CYAN);
        super.paint(g);
        g.fillArc(900, 150, 150, 150, 90,i);
        i+=10;
        try {
            Thread.sleep(40);
        } catch (InterruptedException ex) {
            //Logger.getLogger(NewJFrame2.class.getName()).log(Level.SEVERE, null, ex);
        }
        repaint();        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        SIZE = new javax.swing.JLabel();
        PATH = new javax.swing.JLabel();
        FILENAME = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jLabel2.setIcon(new javax.swing.ImageIcon("C:\\Users\\MANAV PATEL\\Documents\\NetBeansProjects\\JavaApplication2\\src\\Capture.PNG")); // NOI18N
        jLabel2.setText("jLabel2");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(420, 320, 300, 50);

        jButton1.setIcon(new javax.swing.ImageIcon("C:\\Users\\MANAV PATEL\\Documents\\NetBeansProjects\\JavaApplication2\\src\\tempsnip.png")); // NOI18N
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton1MouseEntered(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(60, 310, 100, 60);

        jLabel3.setIcon(new javax.swing.ImageIcon("C:\\Users\\MANAV PATEL\\Documents\\NetBeansProjects\\JavaApplication2\\src\\recieving.jpg")); // NOI18N
        getContentPane().add(jLabel3);
        jLabel3.setBounds(720, 300, 110, 80);

        SIZE.setBackground(new java.awt.Color(255, 255, 255));
        SIZE.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        SIZE.setForeground(new java.awt.Color(102, 255, 255));
        SIZE.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 255, 255)));
        getContentPane().add(SIZE);
        SIZE.setBounds(440, 70, 210, 40);
        Cursor cursor7 = new Cursor(Cursor.TEXT_CURSOR);

        SIZE.setCursor(cursor7);
        SIZE.setVisible(true);

        PATH.setBackground(new java.awt.Color(255, 255, 255));
        PATH.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        PATH.setForeground(new java.awt.Color(102, 255, 255));
        PATH.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 255, 255)));
        getContentPane().add(PATH);
        PATH.setBounds(60, 130, 590, 40);
        Cursor cursor8 = new Cursor(Cursor.TEXT_CURSOR);

        PATH.setCursor(cursor8);
        PATH.setVisible(true);

        FILENAME.setBackground(new java.awt.Color(255, 255, 255));
        FILENAME.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        FILENAME.setForeground(new java.awt.Color(102, 255, 255));
        FILENAME.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 255, 255)));
        getContentPane().add(FILENAME);
        FILENAME.setBounds(60, 70, 340, 40);
        Cursor cursor6 = new Cursor(Cursor.TEXT_CURSOR);

        FILENAME.setCursor(cursor6);
        FILENAME.setVisible(true);

        jButton2.setIcon(new javax.swing.ImageIcon("C:\\Users\\MANAV PATEL\\Documents\\NetBeansProjects\\JavaApplication2\\src\\Capture1.PNG")); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(590, 190, 60, 60);
        Cursor cursor5 = new Cursor(Cursor.HAND_CURSOR);

        jButton2.setCursor(cursor5);
        jButton2.setVisible(true);

        jLabel1.setIcon(new javax.swing.ImageIcon("C:\\Users\\MANAV PATEL\\Documents\\NetBeansProjects\\JavaApplication2\\src\\Transfer.jpg")); // NOI18N
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 0, 880, 500);

        pack();
    }// </editor-fold>//GEN-END:initComponents
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        PATH.setText("  PATH");
        FILENAME.setText("  FILENAME");
        SIZE.setText("  SIZE");
       JFileChooser j = new JFileChooser(FileSystemView.getFileSystemView()); 
                        int option = j.showSaveDialog(null);
                        String path = "", fileName = "";
                        if (option == JFileChooser.APPROVE_OPTION) {
                             File selectedFile = j.getSelectedFile();
                                path = selectedFile.getAbsolutePath();
                                //System.out.println(path);
                                
                                //System.out.println(path);
                                File file = j.getSelectedFile();
                                fileName= file.getName();
                                
                        }
                        
                        File file =new File(path);		
		if(file.exists()){			
			double bytes = file.length();
                        SIZE.setText(bytes+" bytes");
			//System.out.println("bytes : " + bytes);
                        //System.out.println("File Name : " + fileName);
                }
      
    int SOCKET_PORT = 13294;  // you may change this
    String FILE_TO_SEND = path;  // you may change this
    PATH.setText(path);
    FILENAME.setText(fileName);
    
    FileInputStream fis = null;
    BufferedInputStream bis = null;
    OutputStream os = null;
    ServerSocket servsock = null;
    Socket sock = null;
    try {
           try {
               servsock = new ServerSocket(SOCKET_PORT);
           } catch (IOException ex) {
               Logger.getLogger(AfterAdmin.class.getName()).log(Level.SEVERE, null, ex);
           }
      while (true) {
        System.out.println("Waiting...");
        try {
            try {
                sock = servsock.accept();
            } catch (IOException ex) {
                Logger.getLogger(AfterAdmin.class.getName()).log(Level.SEVERE, null, ex);
            }
          System.out.println("Accepted connection : " + sock);
          // send file
          File myFile = new File (FILE_TO_SEND);
          byte [] mybytearray  = new byte [(int)myFile.length()];
            try {
                fis = new FileInputStream(myFile);
            } catch (FileNotFoundException ex) {
                Logger.getLogger(AfterAdmin.class.getName()).log(Level.SEVERE, null, ex);
            }
          bis = new BufferedInputStream(fis);
            try {
                bis.read(mybytearray,0,mybytearray.length);
            } catch (IOException ex) {
                Logger.getLogger(AfterAdmin.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                os = sock.getOutputStream();
            } catch (IOException ex) {
                Logger.getLogger(AfterAdmin.class.getName()).log(Level.SEVERE, null, ex);
            }
          System.out.println("Sending " + FILE_TO_SEND + "(" + mybytearray.length + " bytes)");
            try {
                os.write(mybytearray,0,mybytearray.length);
            } catch (IOException ex) {
                Logger.getLogger(AfterAdmin.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                os.flush();
            } catch (IOException ex) {
                Logger.getLogger(AfterAdmin.class.getName()).log(Level.SEVERE, null, ex);
            }
          System.out.println("Done.");
        }
        finally {
          if (bis != null) try {
              bis.close();
          } catch (IOException ex) {
              Logger.getLogger(AfterAdmin.class.getName()).log(Level.SEVERE, null, ex);
          }
          if (os != null) try {
              os.close();
          } catch (IOException ex) {
              Logger.getLogger(AfterAdmin.class.getName()).log(Level.SEVERE, null, ex);
          }
          if (sock!=null) try {
              sock.close();
          } catch (IOException ex) {
              Logger.getLogger(AfterAdmin.class.getName()).log(Level.SEVERE, null, ex);
          }
        }
      }
    }
    finally {
      if (servsock != null) try {
          servsock.close();
      } catch (IOException ex) {
          Logger.getLogger(AfterAdmin.class.getName()).log(Level.SEVERE, null, ex);
      }
    }
    }//GEN-LAST:event_jButton1ActionPerformed
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    private void jButton1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1MouseEntered

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        chat1 ch1=new chat1();
        ch1.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AfterAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AfterAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AfterAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AfterAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AfterAdmin().setVisible(true);
                
            }
        });
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel FILENAME;
    private javax.swing.JLabel PATH;
    private javax.swing.JLabel SIZE;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

    @Override
    public void mouseClicked(MouseEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void mousePressed(MouseEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void mouseReleased(MouseEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void mouseEntered(MouseEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void mouseExited(MouseEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
