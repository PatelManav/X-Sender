
import java.io.BufferedOutputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.net.Socket;
import java.util.logging.FileHandler;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.logging.SimpleFormatter;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author MANAV PATEL
 */
public class AfterLogin extends javax.swing.JFrame{

    /**
     * Creates new form AfterLogin
     */
    
    public AfterLogin() {
        initComponents();
        setLocation(200,50);
        setSize(895,540);
        LogIn obj1 = new LogIn();
                
        jLabel6.setText(obj1.userName); 
        LogIn obj2 = new LogIn();
        writeLogs(obj2.userName,"D:\\",true) ;
        
    }
    void writeLogs(String userName, String fileName, boolean check) {
        Logger logger = Logger.getLogger("MyLog");
        FileHandler fileHandler;

        try {

            fileHandler = new FileHandler("D:\\manav");
            logger.addHandler(fileHandler);
            SimpleFormatter formatter = new SimpleFormatter();
            fileHandler.setFormatter(formatter);
            logger.setUseParentHandlers(false);
            // the following statement is used to log any messages  
            if (check) {
                logger.log(Level.INFO, " {0} just recieved {1} from admin", new Object[]{userName, fileName});
                logger.info("hellooooooo");
            }

        } catch (SecurityException | IOException e) {
            e.printStackTrace();
        }
    }
    public final static int SOCKET_PORT = 13301;      // you may change this
    public final static String SERVER = "10.20.130.147"; 
    public static String FILE_TO_RECEIVED = "D:\\";  // you may change this, I give a
    // overwrite the one used by server...

    public final static int FILE_SIZE = 9999999;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        FILENAME = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        FILENAME1 = new javax.swing.JLabel();
        FILENAME2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        FILENAME.setBackground(new java.awt.Color(255, 255, 255));
        FILENAME.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        FILENAME.setForeground(new java.awt.Color(102, 255, 255));
        FILENAME.setText("FILENAME");
        FILENAME.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 255, 255)));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jButton2.setIcon(new javax.swing.ImageIcon("C:\\Users\\MANAV PATEL\\Documents\\NetBeansProjects\\JavaApplication2\\src\\Capture1.PNG")); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(600, 180, 70, 60);

        jLabel2.setIcon(new javax.swing.ImageIcon("C:\\Users\\MANAV PATEL\\Documents\\NetBeansProjects\\JavaApplication2\\src\\Capture.PNG")); // NOI18N
        jLabel2.setText("jLabel2");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(160, 340, 300, 50);

        jLabel3.setIcon(new javax.swing.ImageIcon("C:\\Users\\MANAV PATEL\\Documents\\NetBeansProjects\\JavaApplication2\\src\\recieving.jpg")); // NOI18N
        getContentPane().add(jLabel3);
        jLabel3.setBounds(80, 320, 110, 80);

        jLabel4.setIcon(new javax.swing.ImageIcon("C:\\Users\\MANAV PATEL\\Documents\\NetBeansProjects\\JavaApplication2\\src\\tempsnip.png")); // NOI18N
        jLabel4.setText("jLabel4");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(710, 320, 100, 70);

        FILENAME1.setBackground(new java.awt.Color(255, 255, 255));
        FILENAME1.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        FILENAME1.setForeground(new java.awt.Color(102, 255, 255));
        FILENAME1.setText("File Name ::-");
        getContentPane().add(FILENAME1);
        FILENAME1.setBounds(70, 250, 160, 40);

        FILENAME2.setBackground(new java.awt.Color(255, 255, 255));
        FILENAME2.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        FILENAME2.setForeground(new java.awt.Color(102, 255, 255));
        FILENAME2.setText("  File will be stored in your D:// Drive........");
        FILENAME2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 255, 255)));
        getContentPane().add(FILENAME2);
        FILENAME2.setBounds(70, 190, 490, 40);

        jTextField1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jTextField1.setForeground(new java.awt.Color(153, 153, 153));
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        getContentPane().add(jTextField1);
        jTextField1.setBounds(230, 250, 290, 40);

        jLabel6.setFont(new java.awt.Font("Arial", 3, 36)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(102, 255, 255));
        getContentPane().add(jLabel6);
        jLabel6.setBounds(210, 80, 380, 60);

        jLabel5.setIcon(new javax.swing.ImageIcon("C:\\Users\\MANAV PATEL\\Documents\\NetBeansProjects\\JavaApplication2\\src\\UserPhoto.jpg")); // NOI18N
        jLabel5.setText("jLabel5");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(50, 50, 130, 110);

        jButton1.setIcon(new javax.swing.ImageIcon("C:\\Users\\MANAV PATEL\\Documents\\NetBeansProjects\\JavaApplication2\\src\\aaa.png")); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(520, 250, 40, 40);

        jLabel1.setIcon(new javax.swing.ImageIcon("C:\\Users\\MANAV PATEL\\Documents\\NetBeansProjects\\JavaApplication2\\src\\Transfer.jpg")); // NOI18N
        jLabel1.setText("jLabel1");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 0, 880, 500);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        chat ch2 = new chat();
        ch2.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String s = jTextField1.getText();
        int bytesRead = 0;
        int current = 0;
        boolean flag = false;
        FileOutputStream fos = null;
        BufferedOutputStream bos = null;
        Socket sock = null;
        try {
            try {
                sock = new Socket(SERVER, SOCKET_PORT);
            } catch (IOException ex) {
                Logger.getLogger(AfterLogin.class.getName()).log(Level.SEVERE, null, ex);
            }
            System.out.println("Connecting...");
            //jLabel6.setText("HARSH");
            // receive file
            byte[] mybytearray = new byte[FILE_SIZE];
            InputStream is = null;
            try {
                is = sock.getInputStream();
            } catch (IOException ex) {
                Logger.getLogger(AfterLogin.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                fos = new FileOutputStream(FILE_TO_RECEIVED+s);
            } catch (FileNotFoundException ex) {
                Logger.getLogger(AfterLogin.class.getName()).log(Level.SEVERE, null, ex);
            }
            bos = new BufferedOutputStream(fos);
            try {
                bytesRead = is.read(mybytearray, 0, mybytearray.length);
            } catch (IOException ex) {
                Logger.getLogger(AfterLogin.class.getName()).log(Level.SEVERE, null, ex);
            }
            current = bytesRead;

            do {
                try {
                    bytesRead
                            = is.read(mybytearray, current, (mybytearray.length - current));
                } catch (IOException ex) {
                    Logger.getLogger(AfterLogin.class.getName()).log(Level.SEVERE, null, ex);
                }
                if (bytesRead >= 0) {
                    current += bytesRead;
                }
            } while (bytesRead > -1);

            try {
                bos.write(mybytearray, 0, (int) current);
            } catch (IOException ex) {
                Logger.getLogger(AfterLogin.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                bos.flush();
            } catch (IOException ex) {
                Logger.getLogger(AfterLogin.class.getName()).log(Level.SEVERE, null, ex);
            }
            System.out.println("File " + FILE_TO_RECEIVED
                    + " downloaded (" + current + " bytes read)");
            flag = true ;
        } finally {
            if (fos != null) {
                try {
                    fos.close();
                } catch (IOException ex) {
                    Logger.getLogger(AfterLogin.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            if (bos != null) {
                try {
                    bos.close();
                } catch (IOException ex) {
                    Logger.getLogger(AfterLogin.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            if (sock != null) {
                try {
                    sock.close();
                } catch (IOException ex) {
                    Logger.getLogger(AfterLogin.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AfterLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AfterLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AfterLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AfterLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AfterLogin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel FILENAME;
    private javax.swing.JLabel FILENAME1;
    private javax.swing.JLabel FILENAME2;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
